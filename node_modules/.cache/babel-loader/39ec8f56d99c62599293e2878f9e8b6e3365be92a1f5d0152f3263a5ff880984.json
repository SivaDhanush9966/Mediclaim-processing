{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ungati_mohith\\\\Downloads\\\\react-website\\\\react-website-v1-master\\\\src\\\\components\\\\Forgt_ps.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport './Forgt_ps.css'; // Ensure this is the correct path to your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSendEmail = async () => {\n    try {\n      const response = await axios.post('/api/send-reset-email', {\n        email\n      });\n      if (response.data.success) {\n        setStep(2);\n        setMessage('An email with a token has been sent to your email address.');\n      } else {\n        setMessage('Failed to send email. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending email:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n  const handleVerifyToken = async () => {\n    try {\n      const response = await axios.post('/api/verify-token', {\n        email,\n        token\n      });\n      if (response.data.success) {\n        setStep(3);\n      } else {\n        setMessage('Invalid token. Please check your email and try again.');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n    try {\n      const response = await axios.post('/api/reset-password', {\n        email,\n        token,\n        newPassword\n      });\n      if (response.data.success) {\n        setMessage('Password has been reset successfully.');\n        setStep(1);\n      } else {\n        setMessage('Failed to reset password. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendEmail,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Verify Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter the token\",\n        value: token,\n        onChange: e => setToken(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyToken,\n        children: \"Verify Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm new password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"5ZzTQC6WZgXWnK7LWWythKlWuwY=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","ForgotPassword","_s","step","setStep","email","setEmail","token","setToken","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSendEmail","response","post","data","success","error","console","handleVerifyToken","handleResetPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ungati_mohith/Downloads/react-website/react-website-v1-master/src/components/Forgt_ps.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport './Forgt_ps.css'; // Ensure this is the correct path to your CSS file\n\nconst ForgotPassword = () => {\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSendEmail = async () => {\n    try {\n      const response = await axios.post('/api/send-reset-email', { email });\n      if (response.data.success) {\n        setStep(2);\n        setMessage('An email with a token has been sent to your email address.');\n      } else {\n        setMessage('Failed to send email. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending email:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n\n  const handleVerifyToken = async () => {\n    try {\n      const response = await axios.post('/api/verify-token', { email, token });\n      if (response.data.success) {\n        setStep(3);\n      } else {\n        setMessage('Invalid token. Please check your email and try again.');\n      }\n    } catch (error) {\n      console.error('Error verifying token:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/api/reset-password', {\n        email,\n        token,\n        newPassword\n      });\n      if (response.data.success) {\n        setMessage('Password has been reset successfully.');\n        setStep(1);\n      } else {\n        setMessage('Failed to reset password. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setMessage('An error occurred. Please try again later.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {step === 1 && (\n        <div>\n          <h2>Forgot Password</h2>\n          <input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <button onClick={handleSendEmail}>Send Email</button>\n        </div>\n      )}\n      {step === 2 && (\n        <div>\n          <h2>Verify Token</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Enter the token\"\n            value={token}\n            onChange={(e) => setToken(e.target.value)}\n          />\n          <button onClick={handleVerifyToken}>Verify Token</button>\n        </div>\n      )}\n      {step === 3 && (\n        <div>\n          <h2>Reset Password</h2>\n          <input\n            type=\"password\"\n            placeholder=\"New password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm new password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <button onClick={handleResetPassword}>Reset Password</button>\n        </div>\n      )}\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}