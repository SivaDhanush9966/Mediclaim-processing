{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ungati_mohith\\\\Downloads\\\\react-website\\\\react-website-v1-master\\\\src\\\\components\\\\Samp.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Samp() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState();\n  // Store the response status\n  const [error, setError] = useState(); // Store the error message\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      console.log(\"line 17\");\n      console.log(email, password);\n      const response = await axios.post('https://localhost:8080/login', {\n        email,\n        password\n      });\n      console.log(\"------\");\n      console.log(response);\n      setStatus(response.status); // Set the response status\n      setMessage(response.data.message); // Assuming the response contains a 'message' field\n      setError(null); // Clear any previous error\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error:', error);\n      setStatus((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status); // Get the status from the error response or default to 500\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message); // Get the error message from the response or the error itself\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(Samp, \"Y27Zk653S4W1skH5twN3nOFX3sU=\");\n_c = Samp;\nexport default Samp;\nvar _c;\n$RefreshReg$(_c, \"Samp\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","Samp","_s","email","setEmail","password","setPassword","message","setMessage","status","setStatus","error","setError","handleSubmit","event","preventDefault","console","log","response","post","data","_error$response","_error$response2","_error$response2$data","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/ungati_mohith/Downloads/react-website/react-website-v1-master/src/components/Samp.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\n\nfunction Samp() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');   \n\n  const [status, setStatus] = useState();   \n// Store the response status\n  const [error, setError] = useState(); // Store the error message\n\n  const handleSubmit = async (event) => {\n      event.preventDefault();\n\n      try {\n          console.log(\"line 17\")\n          console.log(email,password)\n          const response = await axios.post('https://localhost:8080/login', {\n              email,\n              password\n          });\n          console.log(\"------\")\n          console.log(response)\n          setStatus(response.status); // Set the response status\n          setMessage(response.data.message); // Assuming the response contains a 'message' field\n          setError(null); // Clear any previous error\n      } catch (error) {\n          console.error('Error:', error);\n          setStatus(error.response?.status); // Get the status from the error response or default to 500\n          setError(error.response?.data?.message || error.message); // Get the error message from the response or the error itself\n      }\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}   \n/>\n          <br />\n          <label htmlFor=\"password\">Password:</label>\n          <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n          <br />\n          <button type=\"submit\">Login</button>   \n\n          <p>Status: {status}</p>\n          <p>{message}</p>\n          {error && <p>Error: {error}</p>}\n      </form>\n  );\n}\n\nexport default Samp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}