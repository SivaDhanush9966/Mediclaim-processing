{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ungati_mohith\\\\Downloads\\\\react-website\\\\react-website-v1-master\\\\src\\\\components\\\\Forgt_ps.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Forgt_ps.css'; // Ensure this is the correct path to your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailStep = ({\n  email,\n  setEmail,\n  handleSendEmail\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"step-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Forgot Password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleSendEmail,\n    children: \"Send Email\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = EmailStep;\nconst TokenStep = ({\n  token,\n  setToken,\n  handleVerifyToken\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"step-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Verify Token\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the token\",\n    value: token,\n    onChange: e => setToken(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleVerifyToken,\n    children: \"Verify Token\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n_c2 = TokenStep;\nconst PasswordResetStep = ({\n  newPassword,\n  setNewPassword,\n  confirmPassword,\n  setConfirmPassword,\n  handleResetPassword\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"step-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Reset Password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"password\",\n    placeholder: \"New password\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm new password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleResetPassword,\n    children: \"Reset Password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this);\n_c3 = PasswordResetStep;\nconst ForgotPassword = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSendEmail = () => {\n    // Simulate API call success\n    setStep(2);\n    setMessage('An email with a token has been sent to your email address.');\n  };\n  const handleVerifyToken = () => {\n    // Simulate token verification success\n    setStep(3);\n    setMessage('');\n  };\n  const handleResetPassword = () => {\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n\n    // Simulate password reset success\n    setMessage('Password has been reset successfully.');\n    setStep(1);\n    setEmail('');\n    setToken('');\n    setNewPassword('');\n    setConfirmPassword('');\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"container\">\n    //   {step === 1 && (\n    //     <EmailStep email={email} setEmail={setEmail} handleSendEmail={handleSendEmail} />\n    //   )}\n    //   {step === 2 && (\n    //     <TokenStep token={token} setToken={setToken} handleVerifyToken={handleVerifyToken} />\n    //   )}\n    //   {step === 3 && (\n    //     <PasswordResetStep\n    //       newPassword={newPassword}\n    //       setNewPassword={setNewPassword}\n    //       confirmPassword={confirmPassword}\n    //       setConfirmPassword={setConfirmPassword}\n    //       handleResetPassword={handleResetPassword}\n    //     />\n    //   )}\n    //   {message && <p>{message}</p>}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"containering\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pic-sec\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Forgot Password ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No need to panic! Simply follow the steps below to reset your password and continue enjoying our services. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 119\n          }, this), \"Your security is our priority.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Some additional details can go here. You can include more text or other elements as needed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(ForgotPassword, \"5ZzTQC6WZgXWnK7LWWythKlWuwY=\");\n_c4 = ForgotPassword;\nexport default ForgotPassword;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"EmailStep\");\n$RefreshReg$(_c2, \"TokenStep\");\n$RefreshReg$(_c3, \"PasswordResetStep\");\n$RefreshReg$(_c4, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmailStep","email","setEmail","handleSendEmail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","TokenStep","token","setToken","handleVerifyToken","_c2","PasswordResetStep","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handleResetPassword","_c3","ForgotPassword","_s","step","setStep","message","setMessage","_c4","$RefreshReg$"],"sources":["C:/Users/ungati_mohith/Downloads/react-website/react-website-v1-master/src/components/Forgt_ps.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Forgt_ps.css'; // Ensure this is the correct path to your CSS file\n\nconst EmailStep = ({ email, setEmail, handleSendEmail }) => (\n  <div className=\"step-container\">\n    <h2>Forgot Password</h2>\n    <input\n      type=\"email\"\n      placeholder=\"Enter your email\"\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n    />\n    <button onClick={handleSendEmail}>Send Email</button>\n  </div>\n);\n\nconst TokenStep = ({ token, setToken, handleVerifyToken }) => (\n  <div className=\"step-container\">\n    <h2>Verify Token</h2>\n    <input\n      type=\"text\"\n      placeholder=\"Enter the token\"\n      value={token}\n      onChange={(e) => setToken(e.target.value)}\n    />\n    <button onClick={handleVerifyToken}>Verify Token</button>\n  </div>\n);\n\nconst PasswordResetStep = ({\n  newPassword,\n  setNewPassword,\n  confirmPassword,\n  setConfirmPassword,\n  handleResetPassword,\n}) => (\n  <div className=\"step-container\">\n    <h2>Reset Password</h2>\n    <input\n      type=\"password\"\n      placeholder=\"New password\"\n      value={newPassword}\n      onChange={(e) => setNewPassword(e.target.value)}\n    />\n    <input\n      type=\"password\"\n      placeholder=\"Confirm new password\"\n      value={confirmPassword}\n      onChange={(e) => setConfirmPassword(e.target.value)}\n    />\n    <button onClick={handleResetPassword}>Reset Password</button>\n  </div>\n);\n\nconst ForgotPassword = () => {\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSendEmail = () => {\n    // Simulate API call success\n    setStep(2);\n    setMessage('An email with a token has been sent to your email address.');\n  };\n\n  const handleVerifyToken = () => {\n    // Simulate token verification success\n    setStep(3);\n    setMessage('');\n  };\n\n  const handleResetPassword = () => {\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n\n    // Simulate password reset success\n    setMessage('Password has been reset successfully.');\n    setStep(1);\n    setEmail('');\n    setToken('');\n    setNewPassword('');\n    setConfirmPassword('');\n  };\n\n  return (\n    // <div className=\"container\">\n    //   {step === 1 && (\n    //     <EmailStep email={email} setEmail={setEmail} handleSendEmail={handleSendEmail} />\n    //   )}\n    //   {step === 2 && (\n    //     <TokenStep token={token} setToken={setToken} handleVerifyToken={handleVerifyToken} />\n    //   )}\n    //   {step === 3 && (\n    //     <PasswordResetStep\n    //       newPassword={newPassword}\n    //       setNewPassword={setNewPassword}\n    //       confirmPassword={confirmPassword}\n    //       setConfirmPassword={setConfirmPassword}\n    //       handleResetPassword={handleResetPassword}\n    //     />\n    //   )}\n    //   {message && <p>{message}</p>}\n    // </div>\n\n    <div className=\"containering\">\n      <div className=\"photo-section\">\n        <div className='pic-sec'></div>\n      </div>\n      <div className=\"content-section\">\n        <h1>Forgot Password ?</h1>\n        <p>No need to panic! Simply follow the steps below to reset your password and continue enjoying our services. <br/>Your security is our priority.</p>\n        <div className=\"details\">\n          <p>Some additional details can go here. You can include more text or other elements as needed.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}