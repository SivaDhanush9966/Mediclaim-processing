{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ungati_mohith\\\\Downloads\\\\react-website\\\\react-website-v1-master\\\\src\\\\components\\\\Example.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClaimsComponent = () => {\n  _s();\n  const [claims, setClaims] = useState([]);\n  const fetchAndFilterClaims = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/admin/claims', {\n        headers: {\n          'Authorization': 'Basic YWRtaW4xMjM6Y21z'\n        }\n      });\n\n      // Assuming the response data is an array of claims\n      const filteredClaims = response.data.filter(claim => claim.status !== 'Not Submitted');\n\n      // Update the state with the filtered claims\n      setClaims(filteredClaims);\n    } catch (error) {\n      console.error('Error fetching claims:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAndFilterClaims();\n  }, []); // Empty dependency array ensures this runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Claims\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: claims.map((claim, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [claim.id, claim.policyName, \" - \", claim.status]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimsComponent, \"17Kkweb1Cyb9Zk6k8cR+SmVFJAs=\");\n_c = ClaimsComponent;\nexport default ClaimsComponent;\nvar _c;\n$RefreshReg$(_c, \"ClaimsComponent\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","ClaimsComponent","_s","claims","setClaims","fetchAndFilterClaims","response","get","headers","filteredClaims","data","filter","claim","status","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","id","policyName","_c","$RefreshReg$"],"sources":["C:/Users/ungati_mohith/Downloads/react-website/react-website-v1-master/src/components/Example.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst ClaimsComponent = () => {\n  const [claims, setClaims] = useState([]);\n\n  const fetchAndFilterClaims = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/admin/claims', {\n        headers: {\n          'Authorization': 'Basic YWRtaW4xMjM6Y21z'\n        }\n      });\n\n      // Assuming the response data is an array of claims\n      const filteredClaims = response.data.filter(claim => claim.status !== 'Not Submitted');\n      \n      // Update the state with the filtered claims\n      setClaims(filteredClaims);\n    } catch (error) {\n      console.error('Error fetching claims:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAndFilterClaims();\n  }, []); // Empty dependency array ensures this runs once when the component mounts\n\n  return (\n    <div>\n      <h1>Claims</h1>\n      <ul>\n        {claims.map((claim, index) => (\n          <li key={index}>\n            {claim.id}\n            {claim.policyName} - {claim.status}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ClaimsComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,oCAAoC,EAAE;QACrEC,OAAO,EAAE;UACP,eAAe,EAAE;QACnB;MACF,CAAC,CAAC;;MAEF;MACA,MAAMC,cAAc,GAAGH,QAAQ,CAACI,IAAI,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,eAAe,CAAC;;MAEtF;MACAT,SAAS,CAACK,cAAc,CAAC;IAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfpB,OAAA;MAAAgB,QAAA,EACGb,MAAM,CAACkB,GAAG,CAAC,CAACT,KAAK,EAAEU,KAAK,kBACvBtB,OAAA;QAAAgB,QAAA,GACGJ,KAAK,CAACW,EAAE,EACRX,KAAK,CAACY,UAAU,EAAC,KAAG,EAACZ,KAAK,CAACC,MAAM;MAAA,GAF3BS,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}