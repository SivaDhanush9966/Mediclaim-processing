{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ungati_mohith\\\\Downloads\\\\react-website\\\\react-website-v1-master\\\\src\\\\components\\\\Forgt_ps.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Forgt_ps.css'; // Ensure this is the correct path to your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailStep = ({\n  email,\n  setEmail,\n  handleSendEmail\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"step-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleSendEmail,\n    children: \"Send Email\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n_c = EmailStep;\nconst TokenStep = ({\n  token,\n  setToken,\n  handleVerifyToken\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"step-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter the token\",\n    value: token,\n    onChange: e => setToken(e.target.value),\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleVerifyToken,\n    children: \"Verify Token\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n_c2 = TokenStep;\nconst PasswordResetStep = ({\n  newPassword,\n  setNewPassword,\n  confirmPassword,\n  setConfirmPassword,\n  handleResetPassword\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"step-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"password\",\n    placeholder: \"New password\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm new password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    required: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleResetPassword,\n    children: \"Reset Password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this);\n_c3 = PasswordResetStep;\nconst ForgotPassword = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const validateEmail = email => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(String(email).toLowerCase());\n  };\n  const handleSendEmail = async () => {\n    if (!email) {\n      alert('Email is required.');\n      return;\n    }\n    if (!validateEmail(email)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:8081/password/forgot?email=${email}`);\n      setStep(2);\n      alert('An email with a token has been sent to your email address.');\n    } catch (error) {\n      alert('Failed to send email. Please try again.');\n    }\n  };\n  const handleVerifyToken = () => {\n    if (!token) {\n      alert('Token is required.');\n      return;\n    }\n\n    // Simulate token verification success\n    setStep(3);\n  };\n  const handleResetPassword = async () => {\n    if (!newPassword || !confirmPassword) {\n      alert('Both password fields are required.');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      alert('Passwords do not match.');\n      return;\n    }\n    try {\n      await axios.post(`http://localhost:8081/password/reset?token=${token}&password=${newPassword}`);\n      alert('Password has been reset successfully.');\n      navigate('/'); // Redirect to the login page\n    } catch (error) {\n      alert('Failed to reset password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containering\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No need to panic! Simply follow the steps below to reset your password and continue enjoying our services.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 118\n        }, this), \"Your security is our priority.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [step === 1 && /*#__PURE__*/_jsxDEV(EmailStep, {\n            email: email,\n            setEmail: setEmail,\n            handleSendEmail: handleSendEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), step === 2 && /*#__PURE__*/_jsxDEV(TokenStep, {\n            token: token,\n            setToken: setToken,\n            handleVerifyToken: handleVerifyToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), step === 3 && /*#__PURE__*/_jsxDEV(PasswordResetStep, {\n            newPassword: newPassword,\n            setNewPassword: setNewPassword,\n            confirmPassword: confirmPassword,\n            setConfirmPassword: setConfirmPassword,\n            handleResetPassword: handleResetPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"IS52qDKEKdcBsDxikj81L+dtTr4=\", false, function () {\n  return [useNavigate];\n});\n_c4 = ForgotPassword;\nexport default ForgotPassword;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"EmailStep\");\n$RefreshReg$(_c2, \"TokenStep\");\n$RefreshReg$(_c3, \"PasswordResetStep\");\n$RefreshReg$(_c4, \"ForgotPassword\");","map":{"version":3,"names":["axios","React","useState","useNavigate","jsxDEV","_jsxDEV","EmailStep","email","setEmail","handleSendEmail","className","children","type","placeholder","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","TokenStep","token","setToken","handleVerifyToken","_c2","PasswordResetStep","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handleResetPassword","_c3","ForgotPassword","_s","step","setStep","navigate","validateEmail","re","test","String","toLowerCase","alert","post","error","_c4","$RefreshReg$"],"sources":["C:/Users/ungati_mohith/Downloads/react-website/react-website-v1-master/src/components/Forgt_ps.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Forgt_ps.css'; // Ensure this is the correct path to your CSS file\n\nconst EmailStep = ({ email, setEmail, handleSendEmail }) => (\n  <div className=\"step-container\">\n    <input\n      type=\"email\"\n      placeholder=\"Enter your email\"\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n      required\n    />\n    <button onClick={handleSendEmail}>Send Email</button>\n  </div>\n);\n\nconst TokenStep = ({ token, setToken, handleVerifyToken }) => (\n  <div className=\"step-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Enter the token\"\n      value={token}\n      onChange={(e) => setToken(e.target.value)}\n      required\n    />\n    <button onClick={handleVerifyToken}>Verify Token</button>\n  </div>\n);\n\nconst PasswordResetStep = ({\n  newPassword,\n  setNewPassword,\n  confirmPassword,\n  setConfirmPassword,\n  handleResetPassword,\n}) => (\n  <div className=\"step-container\">\n    <input\n      type=\"password\"\n      placeholder=\"New password\"\n      value={newPassword}\n      onChange={(e) => setNewPassword(e.target.value)}\n      required\n    />\n    <input\n      type=\"password\"\n      placeholder=\"Confirm new password\"\n      value={confirmPassword}\n      onChange={(e) => setConfirmPassword(e.target.value)}\n      required\n    />\n    <button onClick={handleResetPassword}>Reset Password</button>\n  </div>\n);\n\nconst ForgotPassword = () => {\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [token, setToken] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n\n  const validateEmail = (email) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const handleSendEmail = async () => {\n    if (!email) {\n      alert('Email is required.');\n      return;\n    }\n    if (!validateEmail(email)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n\n    try {\n      await axios.post(`http://localhost:8081/password/forgot?email=${email}`);\n      setStep(2);\n      alert('An email with a token has been sent to your email address.');\n    } catch (error) {\n      alert('Failed to send email. Please try again.');\n    }\n  };\n\n  const handleVerifyToken = () => {\n    if (!token) {\n      alert('Token is required.');\n      return;\n    }\n\n    // Simulate token verification success\n    setStep(3);\n  };\n\n  const handleResetPassword = async () => {\n    if (!newPassword || !confirmPassword) {\n      alert('Both password fields are required.');\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      alert('Passwords do not match.');\n      return;\n    }\n\n    try {\n      await axios.post(`http://localhost:8081/password/reset?token=${token}&password=${newPassword}`);\n      alert('Password has been reset successfully.');\n      navigate('/'); // Redirect to the login page\n    } catch (error) {\n      alert('Failed to reset password. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"containering\">\n      <div className=\"content-section\">\n        <h1>Forgot Password?</h1>\n        <p>No need to panic! Simply follow the steps below to reset your password and continue enjoying our services.<br />Your security is our priority.</p>\n        <div className=\"details\">\n          <div className=\"container\">\n            {step === 1 && (\n              <EmailStep\n                email={email}\n                setEmail={setEmail}\n                handleSendEmail={handleSendEmail}\n              />\n            )}\n            {step === 2 && (\n              <TokenStep\n                token={token}\n                setToken={setToken}\n                handleVerifyToken={handleVerifyToken}\n              />\n            )}\n            {step === 3 && (\n              <PasswordResetStep\n                newPassword={newPassword}\n                setNewPassword={setNewPassword}\n                confirmPassword={confirmPassword}\n                setConfirmPassword={setConfirmPassword}\n                handleResetPassword={handleResetPassword}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}