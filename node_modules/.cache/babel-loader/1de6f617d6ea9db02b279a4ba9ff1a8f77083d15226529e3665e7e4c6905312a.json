{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ungati_mohith\\\\Downloads\\\\react-website\\\\react-website-v1-master\\\\src\\\\components\\\\Example.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport './Example.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Claims = () => {\n  _s();\n  const [claims, setClaims] = useState([]);\n  const [selectedClaim, setSelectedClaim] = useState(null); // State to store selected claim\n  const [userEmail, setUserEmail] = useState('');\n  const [policyName, setPolicyName] = useState('');\n  const [amountClaimed, setAmountClaimed] = useState('');\n  const [accEmail, setAccEmail] = useState(''); // State to store the accEmail from the selected claim\n\n  useEffect(() => {\n    const email = localStorage.getItem('userEmail');\n    setUserEmail(email);\n    axios.get(`http://localhost:8090/claim/user/${email}`).then(response => {\n      const notSubmittedClaims = response.data.filter(claim => claim.status === 'Not Submitted');\n      setClaims(notSubmittedClaims);\n    }).catch(error => {\n      console.error(\"There was an error fetching the claims!\", error);\n    });\n  }, []);\n  const handleClaimClick = claim => {\n    setSelectedClaim(claim); // Set the selected claim\n    setPolicyName(claim.policyName); // Set the policy name for the selected claim\n    setAccEmail(claim.accEmail); // Set the accEmail for the selected claim\n  };\n  const handleBack = () => {\n    setSelectedClaim(null); // Reset the selected claim to null to show the claims list again\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const claimData = {\n      accEmail,\n      policyName,\n      amountClaimed\n    };\n    const params = new URLSearchParams(claimData).toString();\n    try {\n      const response = await fetch(`http://localhost:8090/claim/update?${params}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        alert('Claim submitted successfully!');\n        window.location.href = '/user';\n      } else {\n        alert('Failed to submit the claim. Please try again.');\n      }\n    } catch (error) {\n      alert('An error occurred. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  // If a claim is selected, display the claim submission form\n  if (selectedClaim) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"claim-form-container-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"claim-form-1\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cash Your Bills!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"User Email\",\n          value: userEmail,\n          onChange: e => setUserEmail(e.target.value),\n          disabled: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Patient Email\",\n          value: accEmail,\n          onChange: e => setAccEmail(e.target.value),\n          disabled: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Policy Number\",\n          value: policyName,\n          onChange: e => setPolicyName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount Claimed\",\n          value: amountClaimed,\n          onChange: e => setAmountClaimed(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Claim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-bg-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-bg-01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-bg-02\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Display the list of claims if no claim is selected\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"claims-container\",\n    children: claims.map(claim => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"claim-card\",\n      onClick: () => handleClaimClick(claim),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"claim-id\",\n        children: [\"Claim ID: \", claim.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"claim-email\",\n        children: [\"Patient Email: \", claim.accEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"claim-policy\",\n        children: [\"Policy Name: \", claim.policyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, claim.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Claims, \"I9qgXKJxk0C3peAWkfJMwJbua84=\");\n_c = Claims;\nexport default Claims;\nvar _c;\n$RefreshReg$(_c, \"Claims\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Claims","_s","claims","setClaims","selectedClaim","setSelectedClaim","userEmail","setUserEmail","policyName","setPolicyName","amountClaimed","setAmountClaimed","accEmail","setAccEmail","email","localStorage","getItem","get","then","response","notSubmittedClaims","data","filter","claim","status","catch","error","console","handleClaimClick","handleBack","handleSubmit","e","preventDefault","claimData","params","URLSearchParams","toString","fetch","method","headers","ok","alert","window","location","href","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","required","map","id","_c","$RefreshReg$"],"sources":["C:/Users/ungati_mohith/Downloads/react-website/react-website-v1-master/src/components/Example.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport './Example.css';\n\nconst Claims = () => {\n  const [claims, setClaims] = useState([]);\n  const [selectedClaim, setSelectedClaim] = useState(null); // State to store selected claim\n  const [userEmail, setUserEmail] = useState('');\n  const [policyName, setPolicyName] = useState('');\n  const [amountClaimed, setAmountClaimed] = useState('');\n  const [accEmail, setAccEmail] = useState(''); // State to store the accEmail from the selected claim\n\n  useEffect(() => {\n    const email = localStorage.getItem('userEmail');\n    setUserEmail(email);\n\n    axios.get(`http://localhost:8090/claim/user/${email}`)\n      .then(response => {\n        const notSubmittedClaims = response.data.filter(claim => claim.status === 'Not Submitted');\n        setClaims(notSubmittedClaims);\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the claims!\", error);\n      });\n  }, []);\n\n  const handleClaimClick = (claim) => {\n    setSelectedClaim(claim); // Set the selected claim\n    setPolicyName(claim.policyName); // Set the policy name for the selected claim\n    setAccEmail(claim.accEmail); // Set the accEmail for the selected claim\n  };\n\n  const handleBack = () => {\n    setSelectedClaim(null); // Reset the selected claim to null to show the claims list again\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const claimData = {\n      accEmail,\n      policyName,\n      amountClaimed,\n    };\n    \n    const params = new URLSearchParams(claimData).toString();\n    \n    try {\n      const response = await fetch(`http://localhost:8090/claim/update?${params}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        alert('Claim submitted successfully!');\n        window.location.href = '/user';\n      } else {\n        alert('Failed to submit the claim. Please try again.');\n      }\n    } catch (error) {\n      alert('An error occurred. Please try again.');\n      console.error('Error:', error);\n    }\n  };\n\n  // If a claim is selected, display the claim submission form\n  if (selectedClaim) {\n    return (\n      <div className=\"claim-form-container-1\">\n        <button className=\"back-button\" onClick={handleBack}>Back</button> {/* Back button */}\n        <form className=\"claim-form-1\" onSubmit={handleSubmit}>\n          <h2>Cash Your Bills!</h2>\n          <input\n            type=\"email\"\n            placeholder=\"User Email\"\n            value={userEmail}\n            onChange={(e) => setUserEmail(e.target.value)}\n            disabled\n            required\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Patient Email\"\n            value={accEmail}\n            onChange={(e) => setAccEmail(e.target.value)}\n            disabled\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Policy Number\"\n            value={policyName}\n            onChange={(e) => setPolicyName(e.target.value)}\n            required\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Amount Claimed\"\n            value={amountClaimed}\n            onChange={(e) => setAmountClaimed(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Submit Claim</button>\n        </form>\n        <div className='claim-bg-0'></div>\n        <div className='claim-bg-01'></div>\n        <div className='claim-bg-02'></div>\n      </div>\n    );\n  }\n\n  // Display the list of claims if no claim is selected\n  return (\n    <div className=\"claims-container\">\n      {claims.map(claim => (\n        <div className=\"claim-card\" key={claim.id} onClick={() => handleClaimClick(claim)}>\n          <h3 className=\"claim-id\">Claim ID: {claim.id}</h3>\n          <p className=\"claim-email\">Patient Email: {claim.accEmail}</p>\n          <p className=\"claim-policy\">Policy Name: {claim.policyName}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Claims;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/CT,YAAY,CAACO,KAAK,CAAC;IAEnBpB,KAAK,CAACuB,GAAG,CAAC,oCAAoCH,KAAK,EAAE,CAAC,CACnDI,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,kBAAkB,GAAGD,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,eAAe,CAAC;MAC1FrB,SAAS,CAACiB,kBAAkB,CAAC;IAC/B,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAIL,KAAK,IAAK;IAClClB,gBAAgB,CAACkB,KAAK,CAAC,CAAC,CAAC;IACzBd,aAAa,CAACc,KAAK,CAACf,UAAU,CAAC,CAAC,CAAC;IACjCK,WAAW,CAACU,KAAK,CAACX,QAAQ,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBxB,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMyB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAG;MAChBrB,QAAQ;MACRJ,UAAU;MACVE;IACF,CAAC;IAED,MAAMwB,MAAM,GAAG,IAAIC,eAAe,CAACF,SAAS,CAAC,CAACG,QAAQ,CAAC,CAAC;IAExD,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMkB,KAAK,CAAC,sCAAsCH,MAAM,EAAE,EAAE;QAC3EI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIpB,QAAQ,CAACqB,EAAE,EAAE;QACfC,KAAK,CAAC,+BAA+B,CAAC;QACtCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;MAChC,CAAC,MAAM;QACLH,KAAK,CAAC,+CAA+C,CAAC;MACxD;IACF,CAAC,CAAC,OAAOf,KAAK,EAAE;MACde,KAAK,CAAC,sCAAsC,CAAC;MAC7Cd,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;;EAED;EACA,IAAItB,aAAa,EAAE;IACjB,oBACEL,OAAA;MAAK8C,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrC/C,OAAA;QAAQ8C,SAAS,EAAC,aAAa;QAACE,OAAO,EAAElB,UAAW;QAAAiB,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,eACnEpD,OAAA;QAAM8C,SAAS,EAAC,cAAc;QAACO,QAAQ,EAAEtB,YAAa;QAAAgB,QAAA,gBACpD/C,OAAA;UAAA+C,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBpD,OAAA;UACEsD,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,YAAY;UACxBC,KAAK,EAAEjD,SAAU;UACjBkD,QAAQ,EAAGzB,CAAC,IAAKxB,YAAY,CAACwB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UAC9CG,QAAQ;UACRC,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpD,OAAA;UACEsD,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAE3C,QAAS;UAChB4C,QAAQ,EAAGzB,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;UACRC,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpD,OAAA;UACEsD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAE/C,UAAW;UAClBgD,QAAQ,EAAGzB,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UAC/CI,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpD,OAAA;UACEsD,IAAI,EAAC,QAAQ;UACbC,WAAW,EAAC,gBAAgB;UAC5BC,KAAK,EAAE7C,aAAc;UACrB8C,QAAQ,EAAGzB,CAAC,IAAKpB,gBAAgB,CAACoB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UAClDI,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpD,OAAA;UAAQsD,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACPpD,OAAA;QAAK8C,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClCpD,OAAA;QAAK8C,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnCpD,OAAA;QAAK8C,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEV;;EAEA;EACA,oBACEpD,OAAA;IAAK8C,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9B5C,MAAM,CAAC0D,GAAG,CAACrC,KAAK,iBACfxB,OAAA;MAAK8C,SAAS,EAAC,YAAY;MAAgBE,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACL,KAAK,CAAE;MAAAuB,QAAA,gBAChF/C,OAAA;QAAI8C,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAC,YAAU,EAACvB,KAAK,CAACsC,EAAE;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClDpD,OAAA;QAAG8C,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,iBAAe,EAACvB,KAAK,CAACX,QAAQ;MAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DpD,OAAA;QAAG8C,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,eAAa,EAACvB,KAAK,CAACf,UAAU;MAAA;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHhC5B,KAAK,CAACsC,EAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIpC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClD,EAAA,CAzHID,MAAM;AAAA8D,EAAA,GAAN9D,MAAM;AA2HZ,eAAeA,MAAM;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}