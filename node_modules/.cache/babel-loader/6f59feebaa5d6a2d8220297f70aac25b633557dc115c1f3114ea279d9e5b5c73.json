{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ungati_mohith\\\\Downloads\\\\react-website\\\\react-website-v1-master\\\\src\\\\components\\\\pages\\\\PolicyList.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './PolicyList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PolicyList = () => {\n  _s();\n  const [policies, setPolicies] = useState([]);\n  const [expandedPolicyId, setExpandedPolicyId] = useState(null);\n  const userEmail = localStorage.getItem('userEmail');\n  const history = useHistory();\n  useEffect(() => {\n    axios.get('http://localhost:8080/admin/policies', {\n      headers: {\n        'Authorization': 'Basic YWRtaW4xMjM6Y21z'\n      }\n    }).then(response => {\n      setPolicies(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the policies!', error);\n    });\n  }, []);\n  const handleEnroll = policyName => {\n    const registrationData = {\n      userEmail,\n      policyName\n    };\n    console.log(registrationData);\n    axios.post('http://localhost:8090/enrollement/reg', {\n      \"userEmail\": userEmail,\n      \"policyName\": policyName\n    }).then(response => {\n      console.log('Enrollment successful:', response.data, userEmail, policyName);\n      alert('Enrollment successful!');\n      history.push('/customerdash');\n    }).catch(error => {\n      console.error('There was an error enrolling in the policy!', error);\n    });\n  };\n  const toggleDescription = policyId => {\n    setExpandedPolicyId(expandedPolicyId === policyId ? null : policyId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-list\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Policy Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Coverage Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: policies.map(policy => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => toggleDescription(policy.id),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: policy.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: policy.policyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: policy.coverageAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: expandedPolicyId === policy.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: policy.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEnroll(policy.policyName),\n                  children: \"Enroll\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [policy.description.length > 100 ? `${policy.description.substring(0, 100)}... ` : policy.description, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"more-link\",\n                  onClick: () => toggleDescription(policy.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, policy.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PolicyList, \"WT8uJ1rXAPM7dWOWsSWpaB6GEHE=\", false, function () {\n  return [useHistory];\n});\n_c = PolicyList;\nexport default PolicyList;\nvar _c;\n$RefreshReg$(_c, \"PolicyList\");","map":{"version":3,"names":["axios","React","useEffect","useState","useHistory","jsxDEV","_jsxDEV","PolicyList","_s","policies","setPolicies","expandedPolicyId","setExpandedPolicyId","userEmail","localStorage","getItem","history","get","headers","then","response","data","catch","error","console","handleEnroll","policyName","registrationData","log","post","alert","push","toggleDescription","policyId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","policy","Fragment","onClick","id","style","cursor","coverageAmount","description","length","substring","_c","$RefreshReg$"],"sources":["C:/Users/ungati_mohith/Downloads/react-website/react-website-v1-master/src/components/pages/PolicyList.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './PolicyList.css';\n\nconst PolicyList = () => {\n  const [policies, setPolicies] = useState([]);\n  const [expandedPolicyId, setExpandedPolicyId] = useState(null);\n  const userEmail = localStorage.getItem('userEmail');\n  const history = useHistory();\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/admin/policies', {\n      headers: {\n        'Authorization': 'Basic YWRtaW4xMjM6Y21z'\n      }\n    })\n    .then(response => {\n      setPolicies(response.data);\n    })\n    .catch(error => {\n      console.error('There was an error fetching the policies!', error);\n    });\n  }, []);\n\n  const handleEnroll = (policyName) => {\n    const registrationData = {\n      userEmail,\n      policyName\n    };\n    console.log(registrationData);\n\n    axios.post('http://localhost:8090/enrollement/reg', { \"userEmail\": userEmail, \"policyName\": policyName })\n    .then(response => {\n      console.log('Enrollment successful:', response.data, userEmail, policyName);\n      alert('Enrollment successful!');\n      history.push('/customerdash');\n    })\n    .catch(error => {\n      console.error('There was an error enrolling in the policy!', error);\n    });\n  };\n\n  const toggleDescription = (policyId) => {\n    setExpandedPolicyId(expandedPolicyId === policyId ? null : policyId);\n  };\n\n  return (\n    <div className='policy-list'>\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Policy Name</th>\n            <th>Coverage Amount</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {policies.map(policy => (\n            <React.Fragment key={policy.id}>\n              <tr onClick={() => toggleDescription(policy.id)} style={{ cursor: 'pointer' }}>\n                <td>{policy.id}</td>\n                <td>{policy.policyName}</td>\n                <td>{policy.coverageAmount}</td>\n                <td>\n                  {expandedPolicyId === policy.id ? (\n                    <div>\n                      <p>{policy.description}</p>\n                      <button onClick={() => handleEnroll(policy.policyName)}>Enroll</button>\n                    </div>\n                  ) : (\n                    <span>\n                      {policy.description.length > 100 ? \n                        `${policy.description.substring(0, 100)}... ` : policy.description}\n                      <span className=\"more-link\" onClick={() => toggleDescription(policy.id)}>\n                      </span>\n                    </span>\n                  )}\n                </td>\n              </tr>\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PolicyList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}